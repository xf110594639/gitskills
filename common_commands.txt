

1.git init     git仓库初始化
1.git status   查看git仓库状态
2.git add      把文件添加到暂存区
3.git commit   提交更改（把暂存区的内容提交到当前分支）
4.git diff     查看文件被修改的内容
5.git log      显示从最近到最远的提交日志
  git log --pretty=oneline  减少输出的信息
6.git reset --hard HEAD^   回退到上一个版本
7.git reflog   查看记录的每一条命令
8.git reset --hard "id"    迁移到版本"id"的这个版本去

应用：撤销修改

场景1：当你改乱了工作区摸个文件的内容，想直接丢弃工作区的修改时，用命令git checkout -- file
场景2：当你不但改乱了工作区某个文件的内容，还添加到了暂存区，想丢弃修改，分两步，第一步用命令git reset HEAD file,就回到场景1，第二步按场景1操作。

应用：删除文件

确实要从版本库中删除一个文件，就用命令git rm删掉，并且git commit
另一种情况是删错了，因版本库里还有，所以可以轻松把误删的文件恢复到最新版本 git checkout -- file
git checkout其实是用版本库里的版本替换工作区的版本，无论工作区是修改还是删除，都可以一键还原。

分支管理：

查看分支：git branch
创建分支：git branch <name>    //只需要分支名称不需要输入"<>"
切换分支：git checkout <name>
创建+切换分支：git checkout -b <name>
合并某分支到当前分支：git merge <name>
合并分支强制禁止fast forward模式,同时创建一个新提交：git merge --no-ff -m "" <name>
删除分支：git branch -d <name>

*
**
***
日期：2017.1.24
描述：记录使用git管理电液控制器主板程序的过程

1.打开Git Bash软件，以下操作都是在软件中使用命令行操作

2.切换到工作目录'E:\LabROOM\DianYeKkongGROUP\Temporary\18502\TKD_MSCU'

3.git init   初始化Git仓库

4.git add .   对目录中的每个文件都进行跟踪

5 git commit -a  将所监视的文件提交到仓库中，但是这个命令只是将当前工作目录下的文件进行了跟踪，所有子目录下文件并没有被跟踪

6 git add ./\*.c  将当前目录及子目录下所有后缀为'.c'的文件进行跟踪

7 git commit -m "" 经过第6步后，使用此命令需在双引号中添加跟踪注释

*
**
***
日期：2017.2.22
描述：远程仓库使用，使用GitHub

1.ssh-keygen -t rsa -C "110594639@qq.com" 创建SSH Key.查看主目录（用户文件夹路径C:\Users\luofei）里面有id_rsa和
id_rsa.pub两个文件，这两个就是SSH Key的秘钥。注意这一步在一台工作pc仅需执行一次。

2.登录GitHub，打开"Account settings"，在Key文本框里粘贴id_rsa.pub文件内容

3.在GitHub上创建一个仓库，在Repository name填入learngit（仓库名自定义）

4.git remote add origin git@github.com:xf110594639/learngit.git 把已有的本地仓库与这个远程库关联
也可以执行 git remote add origin https://github.com/xf110594639/learngit.git origin是远程库的名字，是Git默认的叫法，可修改

5.git push -u origin master 把本地库内容推送到远程，用git push，实际是把当前分支master推送到远程 第一次推送master分支时 加上-u参数
以后用 git push origin master就可以

描述：将一个远程库克隆到本地

1.git clone git@github.com:xf110594639/gitskills.git 克隆远程库
也可用https://github.com/xf110594639/gitskills.git地址代替git@github.com:xf110594639/gitskills.git
Git支持多种协议，默认的git://使用ssh，但也可以使用https等其他协议。

描述:从远端仓库下载新分支与数据

1.git fetch 用来从一远端仓库更新

2.git pull 该命令相当于git fetch + git merge

*
**
***
日期：2017.3.2
描述：对比这次提交和上次提交生成补丁文件

1.git format-patch -s HEAD^..HEAD  -s参数是补丁文件中添加作者，符号'^'可以被替换成'~n'n是数字表示生成最近提交n次的n个补丁文件

*
**
***
日期：2017.3.9
描述：Git忽略语法

1.忽略文件中的空行或以‘#’开始的行。
2.可以使用通配符，参见linux手册 ‘*’代表任意多字符，‘?’代表一个字符，方括号‘[abc]’代表可选字符范围。
例子：
#这是注释行 --被忽略
*.a       #忽略所有以.a为扩展名的文件。
!lib.a       #但是lib.a文件或目录不要忽略，即使前面设置了对*.a的忽略。
/TODO     #只忽略此目录下的TODO文件，子目录的TODO文件不忽略。
build/    #忽略所有build/目录下的文件。
doc/*.txt #忽略文件如doc/notes.txt，但是文件如doc/server/arch.txt不被忽略。

*
**
***
日期：2017.4.27
描述：显示提交日志加强版

1.git log --graph --pretty=oneline --abbrev-commit graph参数是图形化，pretty=oneline参数在一行中显示 abbrev(abbreviation)参数是采用缩写














